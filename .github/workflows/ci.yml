# SPDX-License-Identifier: MPL-2.0
name: Quality Gate

on:
  push:
    branches:
      - main
      - develop
  pull_request:

concurrency:
  group: quality-gate-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Lint, type, and test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run quality checks
        run: make check
      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage.xml
      - name: Generate SBOM
        if: matrix.python-version == '3.11'
        run: scripts/sbom
      - name: Upload SBOM
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: sbom/sbom.json

  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs: [check, license-compliance]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Build artifacts
        run: make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

  license-compliance:
    name: License compliance
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - name: Install licensing tooling
        run: |
          python -m pip install --upgrade pip
          pip install scancode-toolkit
      - name: Run ScanCode license scan
        run: scancode --license --summary-output scancode-summary.json --json-pp scancode-report.json .
      - name: Verify SPDX headers
        run: python scripts/check_spdx_headers.py
      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-scan-${{ github.sha }}
          path: |
            scancode-summary.json
            scancode-report.json
